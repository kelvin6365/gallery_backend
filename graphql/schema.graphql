"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-01-01 13:00:00`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

type Query @group(middleware: ["auth:api"]){
    users: [User!]! @paginate(type: "paginator" model: "App\\User")
    videos: [Video!]! @paginate(type: "paginator" model: "App\\Video")
    user(username:String!@eq): User @find(model: "App\\User") 
    allUsers: [User!]! @all
    allUserFavouritesList: [UserFavourite!]! @all
    userFavouriteList(id: ID @eq): UserFavourite @find(model: "App\\UserFavourite") 
}

type Mutation {
    createUser(
        name:String @rules(apply: ["required"])
        username:String  @rules(apply: ["required","unique:users,username"])
        password:String @bcrypt @rules(apply: ["required"])
        email:String  @rules(apply: ["required","email","unique:users,email"])
        user_type:String  @rules(apply: ["required"])
    ): User @create(model:"App\\User")

    addVideoFromAvgle(
        id:String @rules(apply: ["required","unique:videos,id"])
        embedded_url:String @rules(apply: ["required"])
        isAvgle:Int @rules(apply: ["required"])
        hd:Int @rules(apply: ["required"])
        preview_url:String @rules(apply: ["required"])
        preview_video_url:String @rules(apply: ["required"])
        title:String @rules(apply: ["required"])
        video_url:String @rules(apply: ["required"])
        duration:String @rules(apply: ["required"])
        viewnumber:String 
        keyword:String @rules(apply: ["required"])
        like:Int 
        dislike:Int 
    ): Video @create(model:"App\\Video")

    addToFavouriteList(
        user_id:String!
        video_id:String!
    ): UserFavourite @create(model:"App\\UserFavourite")
}

type User {
    id: ID!
    name: String!
    username: String!
    email: String!
    user_type: String!
    UserFavourites: [UserFavourite!]! @hasMany(relation:"UserFavourite" ,type: "paginator")
    password: String @bcrypt
    created_at: DateTime!
    updated_at: DateTime!
}

input SortOption {
  field: String
  order: SortOrder
}


enum SortOrder {
    ASC
    DESC
}

type Video {
    id:ID!,
    embedded_url:String!,
    isAvgle:Int!,
    hd:Int!,
    preview_url:String!,
    preview_video_url:String!,
    title:String!,
    video_url:String!,
    duration:String!,
    viewnumber:String!,
    keyword:String!,
    like:Int!,
    dislike:Int!,
    created_at:DateTime!,
    updated_at:DateTime!,
}

type UserFavourite {
    id: ID! @field(resolver: "App\\GraphQL\\Queries\\UserFavourite@resolve")
    video_id: ID!
    user_id: ID!
    video: Video @hasOne
    ownedBy: User @belongsTo(relation:"User") 
    created_at: DateTime!
}
